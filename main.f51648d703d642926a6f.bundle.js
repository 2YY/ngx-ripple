(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1477:function(module,exports,__webpack_require__){"use strict";__webpack_require__(8),__webpack_require__(72),__webpack_require__(64),__webpack_require__(60),__webpack_require__(61),__webpack_require__(1478),__webpack_require__(1479),__webpack_require__(16),__webpack_require__(65);var _clientApi=__webpack_require__(79),_clientLogger=__webpack_require__(56),_configFilename=__webpack_require__(1480);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1480:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var _storybook_addon_docs_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(569),_documentation_json__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(570);Object(_storybook_addon_docs_angular__WEBPACK_IMPORTED_MODULE_0__.setCompodocJson)(_documentation_json__WEBPACK_IMPORTED_MODULE_1__);var parameters={actions:{argTypesRegex:"^on[A-Z].*"}}},1482:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(262).configure)([__webpack_require__(1483)],module,!1)}).call(this,__webpack_require__(148)(module))},1483:function(module,exports,__webpack_require__){var map={"./Ripple.stories.ts":1489};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1483},1489:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Demo",(function(){return Demo}));var tslib_es6=__webpack_require__(144),core=__webpack_require__(0),fesm2015_core=__webpack_require__(219);let NgxRippleService=class NgxRippleService{constructor(){this.activeRippleReferences=[]}show(matRipple,config){const rippleRef=matRipple.launch(config||{persistent:!0,centered:!0});this.activeRippleReferences.push({matRipple:matRipple,rippleRef:rippleRef})}hide(matRipple){const activeRipple=this.activeRippleReferences.find(v=>v.matRipple===matRipple);activeRipple&&(activeRipple.rippleRef.fadeOut(),this.activeRippleReferences=this.activeRippleReferences.filter(v=>v.matRipple!==matRipple))}};NgxRippleService=Object(tslib_es6.a)([Object(core.Injectable)({providedIn:"root"})],NgxRippleService);var _a,_b,client=__webpack_require__(262);let ExampleComponent=class ExampleComponent{constructor(rippleService){this.rippleService=rippleService}};Object(tslib_es6.a)([Object(core.ViewChild)("btn",{read:fesm2015_core.a}),Object(tslib_es6.b)("design:type","function"==typeof(_a=void 0!==fesm2015_core.a&&fesm2015_core.a)?_a:Object)],ExampleComponent.prototype,"btnRef",void 0),ExampleComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"lib-button",template:'<button #btn matRipple (mouseenter)="rippleService.show(btnRef)" (mouseleave)="rippleService.hide(btnRef)">Hover Me</button>',styles:["button {display:inline-block; padding:10px; cursor:pointer;}"]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_b=void 0!==NgxRippleService&&NgxRippleService)?_b:Object])],ExampleComponent);let ExampleModule=class ExampleModule{};ExampleModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[ExampleComponent],imports:[fesm2015_core.b],exports:[ExampleComponent]})],ExampleModule);__webpack_exports__.default={title:"Example/Ripple",component:ExampleComponent,decorators:[Object(client.moduleMetadata)({imports:[ExampleModule]})]};const Demo=(args=>({component:ExampleComponent,props:args})).bind({});Demo.args={},Demo.parameters=Object.assign({storySource:{source:"(args: ExampleComponent) => ({\n  component: ExampleComponent,\n  props: args\n})"}},Demo.parameters)},487:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=487},570:function(module){module.exports=JSON.parse('{"pipes":[],"interfaces":[{"name":"ActiveRipple","id":"interface-ActiveRipple-5a205fa3b39a1ff986820d5b14c138cd","file":"projects/ngx-ripple/src/lib/ngx-ripple.service.ts","type":"interface","sourceCode":"import {Injectable} from \'@angular/core\';\\nimport {MatRipple, RippleConfig, RippleRef} from \'@angular/material/core\';\\n\\ninterface ActiveRipple {\\n  matRipple: MatRipple;\\n  rippleRef: RippleRef;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class NgxRippleService {\\n\\n  private activeRippleReferences: ActiveRipple[] = [];\\n\\n  show(matRipple: MatRipple, config?: RippleConfig) {\\n    const rippleRef = matRipple.launch(config || {\\n      persistent: true,\\n      centered: true\\n    });\\n    this.activeRippleReferences.push({matRipple, rippleRef} as ActiveRipple);\\n  }\\n\\n  hide(matRipple) {\\n    const activeRipple = this.activeRippleReferences.find(v => v.matRipple === matRipple);\\n    if (activeRipple) {\\n      activeRipple.rippleRef.fadeOut();\\n      this.activeRippleReferences = this.activeRippleReferences.filter(v => v.matRipple !== matRipple);\\n    }\\n  }\\n}\\n","properties":[{"name":"matRipple","type":"MatRipple","optional":false,"description":"","line":5},{"name":"rippleRef","type":"RippleRef","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":150,"methods":[]}],"injectables":[{"name":"NgxRippleService","id":"injectable-NgxRippleService-5a205fa3b39a1ff986820d5b14c138cd","file":"projects/ngx-ripple/src/lib/ngx-ripple.service.ts","properties":[{"name":"activeRippleReferences","defaultValue":"[]","type":"ActiveRipple[]","optional":false,"description":"","line":14,"modifierKind":[112]}],"methods":[{"name":"hide","args":[{"name":"matRipple","type":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"jsdoctags":[{"name":"matRipple","type":"","tagName":{"text":"param"}}]},{"name":"show","args":[{"name":"matRipple","type":"MatRipple"},{"name":"config","type":"RippleConfig","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"jsdoctags":[{"name":"matRipple","type":"MatRipple","tagName":{"text":"param"}},{"name":"config","type":"RippleConfig","optional":true,"tagName":{"text":"param"}}]}],"description":"","sourceCode":"import {Injectable} from \'@angular/core\';\\nimport {MatRipple, RippleConfig, RippleRef} from \'@angular/material/core\';\\n\\ninterface ActiveRipple {\\n  matRipple: MatRipple;\\n  rippleRef: RippleRef;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class NgxRippleService {\\n\\n  private activeRippleReferences: ActiveRipple[] = [];\\n\\n  show(matRipple: MatRipple, config?: RippleConfig) {\\n    const rippleRef = matRipple.launch(config || {\\n      persistent: true,\\n      centered: true\\n    });\\n    this.activeRippleReferences.push({matRipple, rippleRef} as ActiveRipple);\\n  }\\n\\n  hide(matRipple) {\\n    const activeRipple = this.activeRippleReferences.find(v => v.matRipple === matRipple);\\n    if (activeRipple) {\\n      activeRipple.rippleRef.fadeOut();\\n      this.activeRippleReferences = this.activeRippleReferences.filter(v => v.matRipple !== matRipple);\\n    }\\n  }\\n}\\n","type":"injectable"}],"classes":[],"directives":[],"components":[{"name":"ExampleComponent","id":"component-ExampleComponent-21751dc0a44e8b5c16836dfdf68f562d","file":"projects/ngx-ripple/src/stories/Ripple.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"lib-button","styleUrls":[],"styles":["button {display:inline-block; padding:10px; cursor:pointer;}"],"template":"<button #btn matRipple (mouseenter)=\\"rippleService.show(btnRef)\\" (mouseleave)=\\"rippleService.hide(btnRef)\\">Hover Me</button>","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"btnRef","type":"MatRipple","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'btn\', {read: MatRipple}"}]},{"name":"rippleService","type":"NgxRippleService","optional":false,"description":"","line":14,"modifierKind":[114]}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, NgModule, ViewChild } from \\"@angular/core\\";\\nimport { MatRipple, MatRippleModule } from \\"@angular/material/core\\";\\nimport { NgxRippleService } from \\"../lib/ngx-ripple.service\\";\\nimport { Meta, moduleMetadata, Story } from \\"@storybook/angular\\";\\n\\n@Component({\\n  selector: \\"lib-button\\",\\n  template: \\"<button #btn matRipple (mouseenter)=\\\\\\"rippleService.show(btnRef)\\\\\\" (mouseleave)=\\\\\\"rippleService.hide(btnRef)\\\\\\">Hover Me</button>\\",\\n  styles: [\\"button {display:inline-block; padding:10px; cursor:pointer;}\\"]\\n})\\nclass ExampleComponent {\\n  @ViewChild(\\"btn\\", { read: MatRipple }) btnRef: MatRipple;\\n\\n  constructor(public rippleService: NgxRippleService) {\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [ExampleComponent],\\n  imports: [MatRippleModule],\\n  exports: [ExampleComponent]\\n})\\nclass ExampleModule {\\n}\\n\\nexport default {\\n  title: \\"Example/Ripple\\",\\n  component: ExampleComponent,\\n  decorators: [moduleMetadata({\\n    imports: [ExampleModule]\\n  })]\\n} as Meta;\\n\\nconst Template: Story<ExampleComponent> = (args: ExampleComponent) => ({\\n  component: ExampleComponent,\\n  props: args\\n});\\n\\nexport const Demo = Template.bind({});\\nDemo.args = {};\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"button {display:inline-block; padding:10px; cursor:pointer;}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"rippleService","type":"NgxRippleService"}],"line":12,"jsdoctags":[{"name":"rippleService","type":"NgxRippleService","tagName":{"text":"param"}}]}}],"modules":[{"name":"ExampleModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ExampleComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"ExampleComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"Demo","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"","defaultValue":"Template.bind({})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/test.ts","type":"literal type"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"Story<ExampleComponent>","defaultValue":"(args: ExampleComponent) => ({\\n  component: ExampleComponent,\\n  props: args\\n})"}],"functions":[],"typealiases":[],"enumerations":[],"groupedVariables":{"projects/ngx-ripple/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/test.ts","type":"literal type"}],"projects/ngx-ripple/src/stories/Ripple.stories.ts":[{"name":"Demo","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"Story<ExampleComponent>","defaultValue":"(args: ExampleComponent) => ({\\n  component: ExampleComponent,\\n  props: args\\n})"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"projects/ngx-ripple/src/lib/ngx-ripple.service.ts","type":"injectable","linktype":"injectable","name":"NgxRippleService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-ripple/src/lib/ngx-ripple.service.ts","type":"interface","linktype":"interface","name":"ActiveRipple","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"component","linktype":"component","name":"ExampleComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Demo","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-ripple/src/stories/Ripple.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-ripple/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-ripple/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')},571:function(module,exports,__webpack_require__){__webpack_require__(572),__webpack_require__(714),__webpack_require__(715),__webpack_require__(898),__webpack_require__(1454),__webpack_require__(1456),__webpack_require__(1461),__webpack_require__(1473),__webpack_require__(1475),__webpack_require__(1477),module.exports=__webpack_require__(1482)},634:function(module,exports){},715:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(262)}},[[571,1,2]]]);
//# sourceMappingURL=main.f51648d703d642926a6f.bundle.js.map